[{"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "4", "inputVector": "", "url": "http://localhost:3000/robots.txt", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "0", "alertRef": "10098"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "6", "inputVector": "", "url": "http://localhost:3000/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "1", "alertRef": "10038"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "6", "inputVector": "", "url": "http://localhost:3000/", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "2", "alertRef": "10098"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "6", "inputVector": "", "url": "http://localhost:3000/", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "3", "alertRef": "10017"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "6", "inputVector": "", "url": "http://localhost:3000/", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "4", "alertRef": "10017"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "6", "inputVector": "", "url": "http://localhost:3000/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "5", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "14", "inputVector": "", "url": "http://localhost:3000/sitemap.xml", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "6", "alertRef": "10038"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "19", "inputVector": "", "url": "http://localhost:3000/runtime.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "7", "alertRef": "10098"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "14", "inputVector": "", "url": "http://localhost:3000/sitemap.xml", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "8", "alertRef": "10098"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "14", "inputVector": "", "url": "http://localhost:3000/sitemap.xml", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "9", "alertRef": "10017"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "14", "inputVector": "", "url": "http://localhost:3000/sitemap.xml", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "10", "alertRef": "10017"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "14", "inputVector": "", "url": "http://localhost:3000/sitemap.xml", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "11", "alertRef": "10109"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "15", "inputVector": "", "url": "http://localhost:3000/assets/public/favicon_js.ico", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "12", "alertRef": "10098"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "20", "inputVector": "", "url": "http://localhost:3000/polyfills.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "13", "alertRef": "10098"}, {"sourceid": "3", "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.", "method": "GET", "evidence": "Access-Control-Allow-Origin: *", "pluginId": "10098", "cweid": "264", "confidence": "Medium", "wascid": "14", "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server", "messageId": "18", "inputVector": "", "url": "http://localhost:3000/styles.css", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"}, "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy", "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.", "alert": "Cross-Domain Misconfiguration", "param": "", "attack": "", "name": "Cross-Domain Misconfiguration", "risk": "Medium", "id": "14", "alertRef": "10098"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3235", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "15", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3240", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "16", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3244", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "17", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3250", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "18", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3256", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "19", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3259", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "20", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3264", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "21", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3270", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "22", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3276", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "23", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3281", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "24", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3288", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "25", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3292", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "26", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3303", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "27", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3308", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "28", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3314", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "29", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3319", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "30", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3321", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "31", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3328", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "32", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3329", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "33", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3338", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "34", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3339", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "35", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3343", "inputVector": "", "url": "http://localhost:3000/assets", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "36", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3347", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "37", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "3353", "inputVector": "", "url": "http://localhost:3000/assets/public", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "38", "alertRef": "10104"}]